<?php
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link      http://cakephp.org CakePHP(tm) Project
 * @since     3.0.0
 * @license   http://www.opensource.org/licenses/mit-license.php MIT License
 */
namespace App\Shell;

use App\Controller\AppController;
use App\Model\App;
use Cake\Console\Shell;
use Cake\Network\Email\Email;
use Dompdf\Dompdf;
use Cake\Core\Configure;
use Cake\ORM\Table;
use Cake\ORM\TableRegistry;

class CancelApplicationQuerySentShell extends Shell
{

	public function initialize()
    {
        parent::initialize();
        $this->loadModel('ApplyOnlines');
		$this->loadModel('ApplyOnlineApprovals');
		$this->loadModel('FesibilityReport');
		$this->loadModel('Installers');
    }
    
    public function main()
    {
    	echo "\r\n--StartTime::".date("Y-m-d H:i:s")."--\r\n";
        $query_sent 		= 1;
        $GUJARAT_STATE 		= 4;
        $LIMIT_QUERY_SENT	= 15;
        $arrApplications 	= $this->ApplyOnlines->find('all',
										[
											'fields'  		=> [
																"ApplyOnlines.id",
																"ApplyOnlines.mobile","ApplyOnlines.email",
																"ApplyOnlines.name_of_consumer_applicant","ApplyOnlines.last_name",
																"ApplyOnlines.query_sent","ApplyOnlines.query_date",
																"ApplyOnlines.apply_state","ApplyOnlines.state",
																"ApplyOnlines.installer_email",
																"ApplyOnlines.consumer_mobile",
																"ApplyOnlines.installer_mobile"
																],
											'conditions'	=> ['ApplyOnlines.query_sent'=>$query_sent,'ApplyOnlines.apply_state'=>$GUJARAT_STATE,'ApplyOnlines.application_status != '=>$this->ApplyOnlineApprovals->APPLICATION_CANCELLED]
										]
									);
        if (!empty($arrApplications))
        {
			foreach($arrApplications as $arrApplication)
			{
				//$Installer 		= $this->Installers->get($arrApplication->ApplyOnlines->installer_id);
				$now 			= strtotime(date("Y-m-d")); // or your date as well
				$your_date 		= strtotime($arrApplication->query_date);
				$datediff 		= $now - $your_date;
				$DAYS 			= ($datediff > 0)?round($datediff / (60 * 60 * 24)):0;
				if ($DAYS > $LIMIT_QUERY_SENT)
				{
					//$application 	= $arrApplication->ApplyOnlines;
					$ApplicationNo 	= $arrApplication->geda_application_no;
					$SMS_Text 		= "Dear ".$arrApplication->name_of_consumer_applicant." ".$arrApplication->last_name.", You have not replied back for the query generated by Discom against your application hence application gets cancelled.";
					
					if(!empty($arrApplication->consumer_mobile))
	                {
	                    $this->ApplyOnlines->sendSMS($arrApplication->id,$arrApplication->consumer_mobile,$SMS_Text);
	                }
	                if(!empty($arrApplication->installer_mobile))
	                {
	                    //$this->ApplyOnlines->sendSMS($arrApplication->id,$arrApplication->installer_mobile,$SMS_Text);
	                }
					$arrData 		= array("application_status"=>$this->ApplyOnlineApprovals->APPLICATION_CANCELLED);
	    			$this->ApplyOnlines->updateAll($arrData,['id' => $arrApplication->id]);
	    			$this->ApplyOnlineApprovals->saveStatus($arrApplication->id,$this->ApplyOnlineApprovals->APPLICATION_CANCELLED,"1","Application cancelled due to query not replied by consumer after ".$LIMIT_QUERY_SENT." days of query sent.");
	    			
	    			if (!empty($arrApplication->email)) {
        				$CustomerEmail 	= $arrApplication->email;
        				$InstallerEmail	= $arrApplication->installer_email;
        			} else {
        				$CustomerEmail 	= $arrApplication->installer_email;
        				$InstallerEmail	= "";
        			}
					$subject		= "Rooftop Solar application :: ".$ApplicationNo." - Cancelled";
					$email 			= new Email('default');
				 	$email->profile('default');

					$email->viewVars(array('CUSTOMER_NAME' => $arrApplication->name_of_consumer_applicant." ".$arrApplication->last_name,
											'APPLICATION_NO' => $ApplicationNo));
					$email->template('application_cancelled_receipt', 'default')
							->emailFormat('html')
							->from(array('info@ahasolar.in' => PRODUCT_NAME))
						    ->to($CustomerEmail)
						    ->bcc('cancelled-app-email@ahasolar.in')
						    ->subject(Configure::read('EMAIL_ENV').$subject);
					if (!empty($InstallerEmail)) {
						$email->cc($InstallerEmail);
					}
					$email->send();
					$ApplicationCancelEmail_log = TableRegistry::get("ApplicationCancelEmailLog");
					$ApplicationCancelEmailLog 						= $ApplicationCancelEmail_log->newEntity();
					$ApplicationCancelEmailLog->application_id 		= $arrApplication->id;
					$ApplicationCancelEmailLog->email_to 			= $CustomerEmail;
	            	$ApplicationCancelEmailLog->installer_email 	= $InstallerEmail;
	            	$ApplicationCancelEmailLog->created 			= date('Y-m-d H:i:s');
					$ApplicationCancelEmail_log->save($ApplicationCancelEmailLog); 
				}
			}
		}
		echo "\r\n--EndTime::".date("Y-m-d H:i:s")."--\r\n";
    }
}